const line = require('@line/bot-sdk');
const { createClient } = require('@supabase/supabase-js');

// --- CONFIG ---
const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN || 'SxsAFfK/FAxY0kjcJjaSFjhyN0GZIG7JR9MeTjh0u1FysDLjQW4jq+v5tjUcxZQgjufRQOQEhLQl9zeotJboR8WjtCOOrIkWAlxTa3U946YVAx/PFUW/7fSdYfN1+TCGXIGZRRJuKgq6nGuVay5lFgdB04t89/1O/w1cDnyilFU=',
  channelSecret: process.env.LINE_CHANNEL_SECRET || 'de016ec05f8d96c9d92e46a86bd805c8'
};
const supabase = createClient(
  'https://mhpetiaaadwsvrtbkmue.supabase.co',
  process.env.SUPABASE_KEY
);
const client = new line.Client(config);

// --- THEME & TEXT ---
const THEME = {
  PRIMARY: '#5D4037', SECONDARY: '#8D6E63', ACCENT: '#FFAB91',
  BACKGROUND: '#FFF8E1', TEXT_DARK: '#3E2723', TEXT_LIGHT: '#D7CCC8',
  SUCCESS: '#81C784', ERROR: '#E57373', HEADER_BG: '#4E342E', FOOTER_BG: '#EFEBE9'
};
const TEXT = {
  WELCOME: '‚òï ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà TeaVibes Cafe',
  POINT_BALANCE: '‚òï ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
  USER_INFO: '‚òï ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
  MENU_TITLE: '‚òï ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å',
  HELP_TITLE: '‚òï ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
  ERROR_TITLE: '‚ö†Ô∏è ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
  USER_NOT_FOUND: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
  ERROR_MESSAGE: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á',
};

// --- MAIN HANDLER ---
module.exports = async (req, res) => {
  if (req.method !== 'POST') return res.status(405).send('Method Not Allowed');
  try {
    const results = await Promise.all((req.body.events || []).map(handleEvent));
    res.status(200).json(results);
  } catch (err) {
    console.error('[Main] Error:', err);
    res.status(500).send('Internal Server Error');
  }
};

// --- EVENT HANDLER ---
async function handleEvent(event) {
  if (event.type !== 'message' || event.message.type !== 'text') return null;
  const { userId } = event.source;
  const text = event.message.text.trim().toLowerCase();

  switch (text) {
    case '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠': case '‡πÅ‡∏ï‡πâ‡∏°': case 'point': case 'points':
      return handleUserReply(event, userId, createPointFlexMessage, '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡πÑ‡∏î‡πâ');
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô': case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å': case 'profile': case 'info':
      return handleUserReply(event, userId, createUserInfoFlexMessage, '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ');
    case '‡πÄ‡∏°‡∏ô‡∏π': case 'menu':
      return reply(event, createMenuFlexMessage());
    case '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠': case 'help':
      return reply(event, createHelpFlexMessage());
    case '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ': case 'hello': case 'hi':
      return handleWelcome(event, userId);
    default:
      return reply(event, createDefaultMessage());
  }
}

// --- UTILITIES ---
async function getUserData(userId) {
  if (!userId) return { user: null, found: false };
  const { data, error } = await supabase.from('users').select('*').eq('userid', userId);
  if (error || !data || !data.length) return { user: null, found: false };
  return { user: data[0], found: true };
}

async function handleUserReply(event, userId, messageFn, errorMsg) {
  try {
    const { user, found } = await getUserData(userId);
    return reply(event, found ? messageFn(user) : createUserNotFoundMessage());
  } catch (e) {
    return reply(event, createErrorFlexMessage(errorMsg));
  }
}

async function handleWelcome(event, userId) {
  const { user, found } = await getUserData(userId);
  return reply(event, createWelcomeMessage(found ? user.name : null));
}

function reply(event, message) {
  return client.replyMessage(event.replyToken, message);
}

// --- FLEX MESSAGE GENERATORS ---
function createWelcomeMessage(name) {
  return flexBubble(TEXT.WELCOME, [
    { type: 'text', text: name ? `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ‡∏Ñ‡∏∏‡∏ì${name}!` : '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ!', size: 'lg', weight: 'bold', color: THEME.PRIMARY, align: 'center' },
    { type: 'text', text: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‚òï', size: 'sm', color: THEME.SECONDARY, align: 'center', margin: 'md' }
  ], [
    btn('‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', 'primary'),
    btn('‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', 'secondary', 'sm')
  ]);
}

function createDefaultMessage() {
  return flexBubble('‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á', [
    { type: 'text', text: 'ü§ñ ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á', weight: 'bold', size: 'lg', color: THEME.PRIMARY },
    { type: 'text', text: '‡∏•‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ', margin: 'md', wrap: true }
  ], [btn('‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠', 'primary')]);
}

function createUserNotFoundMessage() {
  return flexBubble(TEXT.USER_NOT_FOUND, [
    { type: 'text', text: 'üîé ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', weight: 'bold', size: 'xl', color: THEME.ERROR },
    { type: 'text', text: TEXT.USER_NOT_FOUND, margin: 'md', wrap: true }
  ], [
    {
      type: 'button',
      action: { type: 'uri', label: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', uri: 'https://dekcha-frontend.vercel.app/' },
      style: 'primary', color: THEME.PRIMARY
    }
  ]);
}

function createPointFlexMessage(user) {
  return {
    type: 'flex',
    altText: `${TEXT.POINT_BALANCE} ${user.name}`,
    contents: {
      type: 'bubble',
      header: flexHeader(TEXT.POINT_BALANCE),
      hero: {
        type: 'box', layout: 'vertical', contents: [
          { type: 'text', text: `${user.userpoint}`, size: '5xl', weight: 'bold', align: 'center', color: THEME.PRIMARY },
          { type: 'text', text: '‡πÅ‡∏ï‡πâ‡∏°', size: 'sm', align: 'center', color: THEME.SECONDARY, margin: 'sm' }
        ], paddingAll: '20px', backgroundColor: THEME.BACKGROUND
      },
      body: {
        type: 'box', layout: 'vertical', contents: [
          flexRow('üë§ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', user.name),
          { type: 'separator', margin: 'lg', color: THEME.TEXT_LIGHT }
        ], paddingAll: '20px', backgroundColor: THEME.BACKGROUND
      },
      footer: flexFooter([btn('‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', 'primary')])
    }
  };
}

function createUserInfoFlexMessage(user) {
  const level = getMemberLevel(user.userpoint);
  return {
    type: 'flex',
    altText: `${TEXT.USER_INFO} ${user.name}`,
    contents: {
      type: 'bubble',
      header: flexHeader(TEXT.USER_INFO),
      hero: {
        type: 'box', layout: 'vertical', contents: [
          { type: 'text', text: level.title, size: 'lg', weight: 'bold', align: 'center', color: level.color },
          { type: 'text', text: level.description, size: 'xs', align: 'center', color: THEME.SECONDARY, margin: 'sm' }
        ], paddingAll: '15px', backgroundColor: THEME.BACKGROUND
      },
      body: {
        type: 'box', layout: 'vertical', contents: [
          flexRow('üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', user.name, true),
          { type: 'separator', margin: 'lg', color: THEME.TEXT_LIGHT },
          flexRow('üîë ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', user.uid, true),
          { type: 'separator', margin: 'lg', color: THEME.TEXT_LIGHT },
          flexRow('‚ú® ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°', `${user.userpoint} ‡πÅ‡∏ï‡πâ‡∏°`, true, level.color)
        ], paddingAll: '20px', backgroundColor: THEME.BACKGROUND
      },
      footer: flexFooter([
        btn('‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', 'primary'),
        btn('‡∏î‡∏π‡πÄ‡∏°‡∏ô‡∏π', '‡πÄ‡∏°‡∏ô‡∏π', 'secondary', 'sm')
      ])
    }
  };
}

function createMenuFlexMessage() {
  return flexBubble(TEXT.MENU_TITLE, [
    { type: 'text', text: '‚òï ‡∏Å‡∏≤‡πÅ‡∏ü\nüçµ ‡∏ä‡∏≤\nüßÅ ‡∏Ç‡∏ô‡∏°‡∏´‡∏ß‡∏≤‡∏ô\nü•™ ‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á', wrap: true, size: 'md', color: THEME.TEXT_DARK }
  ], [btn('‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', 'primary')]);
}

function createHelpFlexMessage() {
  return flexBubble(TEXT.HELP_TITLE, [
    { type: 'text', text: 'üìù ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:\n\n‚Ä¢ "‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠" - ‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°\n‚Ä¢ "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å" - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n‚Ä¢ "‡πÄ‡∏°‡∏ô‡∏π" - ‡∏î‡∏π‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\n‚Ä¢ "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ" - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö', wrap: true, size: 'sm', color: THEME.TEXT_DARK }
  ], [btn('‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', 'primary')]);
}

function createErrorFlexMessage(msg) {
  return flexBubble(TEXT.ERROR_TITLE, [
    { type: 'text', text: TEXT.ERROR_TITLE, weight: 'bold', size: 'xl', color: THEME.ERROR },
    { type: 'text', text: msg || TEXT.ERROR_MESSAGE, margin: 'md', wrap: true }
  ]);
}

// --- FLEX HELPERS ---
function flexBubble(altText, bodyContents, footerContents = []) {
  return {
    type: 'flex',
    altText,
    contents: {
      type: 'bubble',
      header: flexHeader(altText),
      body: { type: 'box', layout: 'vertical', contents: bodyContents, paddingAll: '20px', backgroundColor: THEME.BACKGROUND },
      ...(footerContents.length && { footer: flexFooter(footerContents) }),
      styles: { body: { backgroundColor: THEME.BACKGROUND }, footer: { backgroundColor: THEME.FOOTER_BG } }
    }
  };
}
function flexHeader(text) {
  return {
    type: 'box',
    layout: 'vertical',
    contents: [{ type: 'text', text, weight: 'bold', color: '#FFFFFF', size: 'xl', align: 'center' }],
    backgroundColor: THEME.HEADER_BG,
    paddingTop: '20px',
    paddingBottom: '20px'
  };
}
function flexFooter(contents) {
  return { type: 'box', layout: 'vertical', contents, paddingAll: '15px', backgroundColor: THEME.FOOTER_BG };
}
function flexRow(label, value, bold = false, color) {
  return {
    type: 'box',
    layout: 'horizontal',
    contents: [
      { type: 'text', text: label, size: 'sm', color: THEME.SECONDARY, flex: 1, ...(bold && { weight: 'bold' }) },
      { type: 'text', text: value, size: 'sm', color: color || THEME.TEXT_DARK, align: 'end', flex: 2, ...(bold && { weight: 'bold' }) }
    ],
    margin: 'md'
  };
}
function btn(label, text, style = 'primary', margin) {
  return {
    type: 'button',
    action: { type: 'message', label, text },
    style,
    color: style === 'primary' ? THEME.PRIMARY : THEME.SECONDARY,
    ...(margin && { margin })
  };
}
function getMemberLevel(points) {
  if (points >= 50) return { title: 'GOLD MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á', color: '#FFD700' };
  if (points >= 30) return { title: 'SILVER MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô', color: '#C0C0C0' };
  if (points >= 10) return { title: 'BRONZE MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á', color: '#CD7F32' };
  return { title: 'MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', color: THEME.SECONDARY };
}