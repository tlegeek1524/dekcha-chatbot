const line = require('@line/bot-sdk');
const { createClient } = require('@supabase/supabase-js');

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase
const supabaseUrl = 'https://sgncxqqiizwnnffjffok.supabase.co';  // ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô URL ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNnbmN4cXFpaXp3bm5mZmpmZm9rIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0ODIwMDQsImV4cCI6MjA2NzA1ODAwNH0.nQegkuQ1sC5b_8Hr70FbBkm0nulsLPNOGervJe9Su0A'; // ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô Key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

const supabase = createClient(supabaseUrl, supabaseKey);

// LINE Bot configuration
const config = {
  channelAccessToken: 'REG0CAijX1esVbPqu1wlpUkKeFP739y86ZFzDk2QDKGP1v2HfGKdKnBBzNNdMcdkjufRQOQEhLQl9zeotJboR8WjtCOOrIkWAlxTa3U946Z19XemRyjymvs36n0Ee7ZtOpe+nwycCC4QNngADupCRgdB04t89/1O/w1cDnyilFU=',
  channelSecret: 'de016ec05f8d96c9d92e46a86bd805c8'
};

const client = new line.Client(config);

// ‡∏ò‡∏µ‡∏°‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å
const THEME = {
  PRIMARY: '#5D4037',
  SECONDARY: '#8D6E63',
  ACCENT: '#FFAB91',
  BACKGROUND: '#FFF8E1',
  TEXT_DARK: '#3E2723',
  TEXT_LIGHT: '#D7CCC8',
  SUCCESS: '#81C784',
  ERROR: '#E57373',
  HEADER_BG: '#4E342E',
  FOOTER_BG: '#EFEBE9',
};

// ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
const TEXT = {
  WELCOME: '‚òï ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà TeaVibes Cafe',
  POINT_BALANCE: '‚òï ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
  USER_INFO: '‚òï ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
  MENU_TITLE: '‚òï ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å',
  HELP_TITLE: '‚òï ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
  ERROR_TITLE: '‚ö†Ô∏è ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
  USER_NOT_FOUND: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
  ERROR_MESSAGE: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á',
};

module.exports = async (req, res) => {
  if (req.method !== 'POST') {
    return res.status(405).send('Method Not Allowed');
  }

  try {
    const events = req.body.events;
    const results = await Promise.all(events.map(handleEvent));
    return res.status(200).json(results);
  } catch (err) {
    console.error(err);
    return res.status(500).send('Internal Server Error');
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå
async function handleEvent(event) {
  if (event.type !== 'message' || event.message.type !== 'text') {
    return Promise.resolve(null);
  }

  const userMessage = event.message.text.trim().toLowerCase();
  const userId = event.source.userId;

  switch (userMessage) {
    case '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠':
    case '‡πÅ‡∏ï‡πâ‡∏°':
    case 'points':
      return handlePointBalance(event, userId);
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô':
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å':
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':
    case 'profile':
      return handleUserInfo(event, userId);
    case '‡πÄ‡∏°‡∏ô‡∏π':
    case 'menu':
      return client.replyMessage(event.replyToken, createMenuFlexMessage());
    default:
      return client.replyMessage(event.replyToken, createHelpFlexMessage());
  }
}

// ‡∏î‡∏∂‡∏á‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
async function handlePointBalance(event, userId) {
  try {
    console.log(`[handlePointBalance] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å table 'user' ‡∏î‡πâ‡∏ß‡∏¢ userId: ${userId}`);
    const { data: users, error } = await supabase
      .from('user') // ‡πÉ‡∏ä‡πâ table 'user'
      .select('*')
      .eq('userId', userId); // ‡πÉ‡∏ä‡πâ userId ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤

    if (error) {
      console.error(`[handlePointBalance] ERROR:`, error);
      return client.replyMessage(event.replyToken, createErrorFlexMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'));
    }

    console.log(`[handlePointBalance] SUCCESS:`, users);

    if (!users || users.length === 0) {
      return client.replyMessage(event.replyToken, createUserNotFoundMessage());
    }

    const user = users[0]; // ‡πÄ‡∏≠‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏£‡∏Å
    return client.replyMessage(event.replyToken, createPointFlexMessage(user));
  } catch (err) {
    console.error('[handlePointBalance] Exception:', err);
    return client.replyMessage(event.replyToken, createErrorFlexMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡πÑ‡∏î‡πâ'));
  }
}

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
async function handleUserInfo(event, userId) {
  try {
    console.log(`[handleUserInfo] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å table 'user' ‡∏î‡πâ‡∏ß‡∏¢ userId: ${userId}`);
    const { data: users, error } = await supabase
      .from('user') // ‡πÉ‡∏ä‡πâ table 'user'
      .select('*')
      .eq('userId', userId); // ‡πÉ‡∏ä‡πâ userId ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤

    if (error) {
      console.error(`[handleUserInfo] ERROR:`, error);
      return client.replyMessage(event.replyToken, createErrorFlexMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'));
    }

    console.log(`[handleUserInfo] SUCCESS:`, users);

    if (!users || users.length === 0) {
      return client.replyMessage(event.replyToken, createUserNotFoundMessage());
    }

    const user = users[0]; // ‡πÄ‡∏≠‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏£‡∏Å
    return client.replyMessage(event.replyToken, createUserInfoFlexMessage(user));
  } catch (err) {
    console.error('[handleUserInfo] Exception:', err);
    return client.replyMessage(event.replyToken, createErrorFlexMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ'));
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function createUserNotFoundMessage() {
  return {
    type: 'flex',
    altText: TEXT.USER_NOT_FOUND,
    contents: {
      type: 'bubble',
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üîé ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
            weight: 'bold',
            size: 'xl',
            color: THEME.ERROR,
          },
          {
            type: 'text',
            text: TEXT.USER_NOT_FOUND,
            margin: 'md',
            wrap: true,
          },
        ],
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'uri',
              label: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
              uri: 'https://dekcha-frontend.vercel.app/',
            },
            style: 'primary',
            color: THEME.PRIMARY,
          },
        ],
      },
      styles: {
        body: { backgroundColor: THEME.BACKGROUND },
        footer: { backgroundColor: THEME.FOOTER_BG },
      },
    },
  };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ï‡πâ‡∏°
function createPointFlexMessage(user) {
  return {
    type: 'flex',
    altText: `${TEXT.POINT_BALANCE} ${user.name}`,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: TEXT.POINT_BALANCE,
            weight: 'bold',
            color: '#FFFFFF',
            size: 'xl',
            align: 'center',
          },
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      hero: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: `${user.userpoint}`,
            size: '5xl',
            weight: 'bold',
            align: 'center',
            color: THEME.PRIMARY,
          },
          {
            type: 'text',
            text: '‡πÅ‡∏ï‡πâ‡∏°',
            size: 'sm',
            align: 'center',
            color: THEME.SECONDARY,
            margin: 'sm',
          },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: 'üë§ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', size: 'sm', color: THEME.SECONDARY, flex: 1 },
              { type: 'text', text: `${user.name}`, size: 'sm', color: THEME.TEXT_DARK, align: 'end', flex: 2 },
            ],
            margin: 'md',
          },
          { type: 'separator', margin: 'lg', color: THEME.TEXT_LIGHT },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: { type: 'message', label: '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' },
            style: 'primary',
            color: THEME.PRIMARY,
          },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.FOOTER_BG,
      },
    },
  };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function createUserInfoFlexMessage(user) {
  const memberLevel = getMemberLevel(user.userpoint);

  return {
    type: 'flex',
    altText: `${TEXT.USER_INFO} ${user.name}`,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: TEXT.USER_INFO, weight: 'bold', color: '#FFFFFF', size: 'xl', align: 'center' },
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      hero: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: memberLevel.title, size: 'lg', weight: 'bold', align: 'center', color: memberLevel.color },
          { type: 'text', text: memberLevel.description, size: 'xs', align: 'center', color: THEME.SECONDARY, margin: 'sm' },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.BACKGROUND,
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: 'üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', weight: 'bold', size: 'sm', color: THEME.SECONDARY, flex: 1 },
              { type: 'text', text: `${user.name}`, size: 'sm', color: THEME.TEXT_DARK, align: 'end', flex: 2 },
            ],
            margin: 'md',
          },
          { type: 'separator', margin: 'lg', color: THEME.TEXT_LIGHT },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: 'üîë ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', weight: 'bold', size: 'sm', color: THEME.SECONDARY, flex: 1 },
              { type: 'text', text: `${user.uid}`, size: 'sm', color: THEME.TEXT_DARK, align: 'end', flex: 2 },
            ],
            margin: 'md',
          },
          { type: 'separator', margin: 'lg', color: THEME.TEXT_LIGHT },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: '‚ú® ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°', weight: 'bold', size: 'sm', color: THEME.SECONDARY, flex: 1 },
              { type: 'text', text: `${user.userpoint} ‡πÅ‡∏ï‡πâ‡∏°`, size: 'sm', color: memberLevel.color, align: 'end', flex: 2, weight: 'bold' },
            ],
            margin: 'md',
          },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'button', action: { type: 'message', label: '‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠', text: '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠' }, style: 'primary', color: THEME.PRIMARY },
          { type: 'button', action: { type: 'message', label: '‡∏î‡∏π‡πÄ‡∏°‡∏ô‡∏π', text: '‡πÄ‡∏°‡∏ô‡∏π' }, style: 'secondary', color: THEME.SECONDARY, margin: 'sm' },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.FOOTER_BG,
      },
    },
  };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function getMemberLevel(points) {
  if (points >= 50) return { title: 'GOLD MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á', color: '#FFD700' };
  if (points >= 30) return { title: 'SILVER MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô', color: '#C0C0C0' };
  if (points >= 10) return { title: 'BRONZE MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á', color: '#CD7F32' };
  return { title: 'MEMBER', description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', color: THEME.SECONDARY };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÄ‡∏°‡∏ô‡∏π
function createMenuFlexMessage() {
  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
  return {
    type: 'flex',
    altText: TEXT.MENU_TITLE,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: TEXT.MENU_TITLE, weight: 'bold', size: 'xl', color: '#FFFFFF', align: 'center' }
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: '1. ‡∏Å‡∏≤‡πÅ‡∏ü\n2. ‡∏ä‡∏≤\n3. ‡∏Ç‡∏ô‡∏°‡∏´‡∏ß‡∏≤‡∏ô', wrap: true }
        ],
        paddingAll: '20px',
      }
    }
  };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
function createHelpFlexMessage() {
  return {
    type: 'flex',
    altText: TEXT.HELP_TITLE,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: TEXT.HELP_TITLE, weight: 'bold', size: 'xl', color: '#FFFFFF', align: 'center' }
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: '‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÄ‡∏°‡∏ô‡∏π" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', wrap: true }
        ],
        paddingAll: '20px',
      }
    }
  };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
function createErrorFlexMessage(msg) {
  return {
    type: 'flex',
    altText: TEXT.ERROR_TITLE,
    contents: {
      type: 'bubble',
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: TEXT.ERROR_TITLE, weight: 'bold', size: 'xl', color: THEME.ERROR },
          { type: 'text', text: msg || TEXT.ERROR_MESSAGE, margin: 'md', wrap: true },
        ],
      },
      styles: {
        body: { backgroundColor: THEME.BACKGROUND },
      },
    },
  };
}
