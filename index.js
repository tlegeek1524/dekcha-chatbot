const express = require('express');
const line = require('@line/bot-sdk');
const { PrismaClient } = require('@prisma/client');

const app = express();
const prisma = new PrismaClient();

// LINE Bot configuration
const config = {
  channelAccessToken: 'REG0CAijX1esVbPqu1wlpUkKeFP739y86ZFzDk2QDKGP1v2HfGKdKnBBzNNdMcdkjufRQOQEhLQl9zeotJboR8WjtCOOrIkWAlxTa3U946Z19XemRyjymvs36n0Ee7ZtOpe+nwycCC4QNngADupCRgdB04t89/1O/w1cDnyilFU=',
  channelSecret: 'de016ec05f8d96c9d92e46a86bd805c8'
};

const client = new line.Client(config);

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ò‡∏µ‡∏°‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà
const THEME = {
  PRIMARY: '#5D4037',        // ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏Ç‡πâ‡∏° (‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å)
  SECONDARY: '#8D6E63',      // ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏≠‡πà‡∏≠‡∏ô (‡∏™‡∏µ‡∏£‡∏≠‡∏á)
  ACCENT: '#FFAB91',         // ‡∏™‡∏µ‡∏™‡πâ‡∏°‡∏û‡∏µ‡∏ä (‡∏™‡∏µ‡πÄ‡∏ô‡πâ‡∏ô)
  BACKGROUND: '#FFF8E1',     // ‡∏Ñ‡∏£‡∏µ‡∏°‡∏≠‡πà‡∏≠‡∏ô (‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á)
  TEXT_DARK: '#3E2723',      // ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏°
  TEXT_LIGHT: '#D7CCC8',     // ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô
  SUCCESS: '#81C784',        // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô (‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
  ERROR: '#E57373',          // ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏≠‡πà‡∏≠‡∏ô (‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î)
  HEADER_BG: '#4E342E',      // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß
  FOOTER_BG: '#EFEBE9',      // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢
};

// ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ
const TEXT = {
  WELCOME: '‚òï ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà TeaVibes Cafe',
  POINT_BALANCE: '‚òï ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
  USER_INFO: '‚òï ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
  MENU_TITLE: '‚òï ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å',
  HELP_TITLE: '‚òï ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
  ERROR_TITLE: '‚ö†Ô∏è ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
  USER_NOT_FOUND: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
  ERROR_MESSAGE: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á',
};

// Webhook endpoint
app.post('/webhook', line.middleware(config), (req, res) => {
  Promise.all(req.body.events.map(handleEvent))
    .then(result => res.json(result))
    .catch(err => {
      console.error(err);
      res.status(500).end();
    });
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå
async function handleEvent(event) {
  if (event.type !== 'message' || event.message.type !== 'text') {
    return Promise.resolve(null);
  }

  const userMessage = event.message.text.trim().toLowerCase();
  const userId = event.source.userId;

  switch (userMessage) {
    case '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠':
    case '‡πÅ‡∏ï‡πâ‡∏°':
    case 'points':
      return handlePointBalance(event, userId);
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô':
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å':
    case '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':
    case 'profile':
      return handleUserInfo(event, userId);
    case '‡πÄ‡∏°‡∏ô‡∏π':
    case 'menu':
      return client.replyMessage(event.replyToken, createMenuFlexMessage());
    default:
      return client.replyMessage(event.replyToken, createHelpFlexMessage());
  }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
async function handlePointBalance(event, userId) {
  try {
    const user = await prisma.user.findUnique({
      where: { userId: userId },
    });
    if (user) {
      return client.replyMessage(event.replyToken, createPointFlexMessage(user));
    } else {
      return client.replyMessage(event.replyToken, createUserNotFoundMessage());
    }
  } catch (err) {
    console.error(err);
    return client.replyMessage(event.replyToken, createErrorFlexMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡πÑ‡∏î‡πâ'));
  }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
async function handleUserInfo(event, userId) {
  try {
    const user = await prisma.user.findUnique({
      where: { userId: userId },
    });
    if (user) {
      return client.replyMessage(event.replyToken, createUserInfoFlexMessage(user));
    } else {
      return client.replyMessage(event.replyToken, createUserNotFoundMessage());
    }
  } catch (err) {
    console.error(err);
    return client.replyMessage(event.replyToken, createErrorFlexMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ'));
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function createUserNotFoundMessage() {
  return {
    type: 'flex',
    altText: TEXT.USER_NOT_FOUND,
    contents: {
      type: 'bubble',
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üîé ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
            weight: 'bold',
            size: 'xl',
            color: THEME.ERROR,
          },
          {
            type: 'text',
            text: TEXT.USER_NOT_FOUND,
            margin: 'md',
            wrap: true,
          },
        ],
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'uri',
              label: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
              uri: 'https://example.com/register',
            },
            style: 'primary',
            color: THEME.PRIMARY,
          },
        ],
      },
      styles: {
        body: {
          backgroundColor: THEME.BACKGROUND,
        },
        footer: {
          backgroundColor: THEME.FOOTER_BG,
        },
      },
    },
  };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏•‡∏ö‡∏´‡∏•‡∏≠‡∏î‡∏≠‡∏≠‡∏Å)
function createPointFlexMessage(user) {
  return {
    type: 'flex',
    altText: `${TEXT.POINT_BALANCE} ${user.name}`,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: TEXT.POINT_BALANCE,
            weight: 'bold',
            color: '#FFFFFF',
            size: 'xl',
            align: 'center',
          },
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      hero: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: `${user.userpoint}`,
            size: '5xl',
            weight: 'bold',
            align: 'center',
            color: THEME.PRIMARY,
          },
          {
            type: 'text',
            text: '‡πÅ‡∏ï‡πâ‡∏°',
            size: 'sm',
            align: 'center',
            color: THEME.SECONDARY,
            margin: 'sm',
          },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              {
                type: 'text',
                text: 'üë§ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
                size: 'sm',
                color: THEME.SECONDARY,
                flex: 1,
              },
              {
                type: 'text',
                text: `${user.name}`,
                size: 'sm',
                color: THEME.TEXT_DARK,
                align: 'end',
                flex: 2,
              },
            ],
            margin: 'md',
          },
          {
            type: 'separator',
            margin: 'lg',
            color: THEME.TEXT_LIGHT,
          },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'message',
              label: '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
              text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
            },
            style: 'primary',
            color: THEME.PRIMARY,
          },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.FOOTER_BG,
      },
    },
  };
}

function createUserInfoFlexMessage(user) {
  const memberLevel = getMemberLevel(user.userpoint);

  return {
    type: 'flex',
    altText: `${TEXT.USER_INFO} ${user.name}`,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: TEXT.USER_INFO,
            weight: 'bold',
            color: '#FFFFFF',
            size: 'xl',
            align: 'center',
          },
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      hero: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: memberLevel.title,
            size: 'lg',
            weight: 'bold',
            align: 'center',
            color: memberLevel.color,
          },
          {
            type: 'text',
            text: memberLevel.description,
            size: 'xs',
            align: 'center',
            color: THEME.SECONDARY,
            margin: 'sm',
          },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.BACKGROUND,
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              {
                type: 'text',
                text: 'üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
                weight: 'bold',
                size: 'sm',
                color: THEME.SECONDARY,
                flex: 1,
              },
              {
                type: 'text',
                text: `${user.name}`,
                size: 'sm',
                color: THEME.TEXT_DARK,
                align: 'end',
                flex: 2,
              },
            ],
            margin: 'md',
          },
          {
            type: 'separator',
            margin: 'lg',
            color: THEME.TEXT_LIGHT,
          },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              {
                type: 'text',
                text: 'üîë ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
                weight: 'bold',
                size: 'sm',
                color: THEME.SECONDARY,
                flex: 1,
              },
              {
                type: 'text',
                text: `${user.uid}`,
                size: 'sm',
                color: THEME.TEXT_DARK,
                align: 'end',
                flex: 2,
              },
            ],
            margin: 'md',
          },
          {
            type: 'separator',
            margin: 'lg',
            color: THEME.TEXT_LIGHT,
          },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              {
                type: 'text',
                text: '‚ú® ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°',
                weight: 'bold',
                size: 'sm',
                color: THEME.SECONDARY,
                flex: 1,
              },
              {
                type: 'text',
                text: `${user.userpoint} ‡πÅ‡∏ï‡πâ‡∏°`,
                size: 'sm',
                color: memberLevel.color,
                align: 'end',
                flex: 2,
                weight: 'bold',
              },
            ],
            margin: 'md',
          },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'message',
              label: '‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
              text: '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
            },
            style: 'primary',
            color: THEME.PRIMARY,
          },
          {
            type: 'button',
            action: {
              type: 'message',
              label: '‡∏î‡∏π‡πÄ‡∏°‡∏ô‡∏π',
              text: '‡πÄ‡∏°‡∏ô‡∏π',
            },
            style: 'secondary',
            color: THEME.SECONDARY,
            margin: 'sm',
          },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.FOOTER_BG,
      },
    },
  };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function getMemberLevel(points) {
  if (points >= 50) {
    return {
      title: 'GOLD MEMBER',
      description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á',
      color: '#FFD700',
    };
  } else if (points >= 30) {
    return {
      title: 'SILVER MEMBER',
      description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô',
      color: '#C0C0C0',
    };
  } else if (points >= 10) {
    return {
      title: 'BRONZE MEMBER',
      description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á',
      color: '#CD7F32',
    };
  } else {
    return {
      title: 'MEMBER',
      description: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      color: THEME.SECONDARY,
    };
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π (‡∏•‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô)
function createMenuFlexMessage() {
  return {
    type: 'flex',
    altText: TEXT.MENU_TITLE,
    contents: {
      type: 'carousel',
      contents: [
        // ‡πÄ‡∏°‡∏ô‡∏π‡∏ö‡∏±‡∏ï‡∏£‡∏ó‡∏µ‡πà 1: ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å
        {
          type: 'bubble',
          header: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: TEXT.MENU_TITLE,
                weight: 'bold',
                color: '#FFFFFF',
                size: 'xl',
                align: 'center',
              },
            ],
            backgroundColor: THEME.HEADER_BG,
            paddingTop: '20px',
            paddingBottom: '20px',
          },
          body: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'button',
                action: {
                  type: 'message',
                  label: 'üí∞ ‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
                  text: '‡πÅ‡∏ï‡πâ‡∏°‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
                },
                style: 'primary',
                color: THEME.PRIMARY,
                margin: 'md',
              },
              {
                type: 'button',
                action: {
                  type: 'message',
                  label: 'üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
                  text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
                },
                style: 'primary',
                color: THEME.SECONDARY,
                margin: 'md',
              },
            ],
            paddingAll: '20px',
            backgroundColor: THEME.BACKGROUND,
          },
          footer: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
                size: 'xs',
                color: THEME.SECONDARY,
                align: 'center',
              },
            ],
            backgroundColor: THEME.FOOTER_BG,
            paddingAll: '10px',
          },
        },
        // ‡πÄ‡∏°‡∏ô‡∏π‡∏ö‡∏±‡∏ï‡∏£‡∏ó‡∏µ‡πà 2: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
        {
          type: 'bubble',
          header: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: TEXT.HELP_TITLE,
                weight: 'bold',
                color: '#FFFFFF',
                size: 'xl',
                align: 'center',
              },
            ],
            backgroundColor: THEME.HEADER_BG,
            paddingTop: '20px',
            paddingBottom: '20px',
          },
          body: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: '‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
                weight: 'bold',
                size: 'lg',
                margin: 'md',
                color: THEME.PRIMARY,
              },
              {
                type: 'text',
                text: '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:',
                margin: 'md',
                wrap: true,
                size: 'sm',
                color: THEME.TEXT_DARK,
              },
              {
                type: 'text',
                text: '‚Ä¢ "‡πÅ‡∏ï‡πâ‡∏°" - ‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
                margin: 'sm',
                wrap: true,
                size: 'sm',
                color: THEME.TEXT_DARK,
              },
              {
                type: 'text',
                text: '‚Ä¢ "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
                margin: 'sm',
                wrap: true,
                size: 'sm',
                color: THEME.TEXT_DARK,
              },
              {
                type: 'text',
                text: '‚Ä¢ "‡πÄ‡∏°‡∏ô‡∏π" - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                margin: 'sm',
                wrap: true,
                size: 'sm',
                color: THEME.TEXT_DARK,
              },
            ],
            paddingAll: '20px',
            backgroundColor: THEME.BACKGROUND,
          },
          footer: {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'button',
                action: {
                  type: 'uri',
                  label: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
                  uri: 'https://line.me/ti/p/~@teaVibesCafe',
                },
                style: 'secondary',
                color: THEME.PRIMARY,
              },
            ],
            backgroundColor: THEME.FOOTER_BG,
            paddingAll: '10px',
          },
        },
      ],
    },
  };
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏™‡∏∞‡∏™‡∏°‡∏Ñ‡∏£‡∏ö")
function createHelpFlexMessage() {
  return {
    type: 'flex',
    altText: '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'ü§ñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô TeaVibes Cafe',
            weight: 'bold',
            size: 'lg',
            color: '#FFFFFF',
            align: 'center',
          },
        ],
        backgroundColor: THEME.HEADER_BG,
        paddingTop: '20px',
        paddingBottom: '20px',
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:',
            margin: 'md',
            wrap: true,
            color: THEME.PRIMARY,
            weight: 'bold',
          },
          {
            type: 'separator',
            margin: 'md',
            color: THEME.TEXT_LIGHT,
          },
          {
            type: 'text',
            text: '‚Ä¢ "‡πÅ‡∏ï‡πâ‡∏°" - ‡∏î‡∏π‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
            margin: 'md',
            wrap: true,
            size: 'sm',
            color: THEME.TEXT_DARK,
          },
          {
            type: 'text',
            text: '‚Ä¢ "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
            margin: 'sm',
            wrap: true,
            size: 'sm',
            color: THEME.TEXT_DARK,
          },
          {
            type: 'text',
            text: '‚Ä¢ "‡πÄ‡∏°‡∏ô‡∏π" - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
            margin: 'sm',
            wrap: true,
            size: 'sm',
            color: THEME.TEXT_DARK,
          },
        ],
        paddingAll: '20px',
        backgroundColor: THEME.BACKGROUND,
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'message',
              label: '‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π',
              text: '‡πÄ‡∏°‡∏ô‡∏π',
            },
            style: 'primary',
            color: THEME.PRIMARY,
          },
        ],
        paddingAll: '15px',
        backgroundColor: THEME.FOOTER_BG,
      },
    },
  };
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
app.listen(3001, () => {
  console.log('üöÄ TeaVibes Cafe LINE Bot ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï 3001');
});
